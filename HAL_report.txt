Report Generated by TOOL:	xmbrowse(64)	20.09-s001
Date: Sun Jan 07 11:25:19 PM WET 2024
Directory: /afs/.ist.utl.pt/users/2/3/ist196523/ptfse/Group2_Project2
Open Log Files: hal.log
Current Filters: None
Total: Errors: 11  Warnings: 546  Notes: 27  Suppressed: None
Snapshot: worklib.top_level:v
---------------------------------------------------------


Severity: Error (11)
  Category: STRUCTURAL (11)
    Tag: CBPAHI (11)
      *E,CBPAHI (./sources/top_level.v,40|0): Combinatorial path crossing multiple units drives 'top_level.pass_nfail'.
        *E,CBPAHI (./sources/top_level.v,40):: in instance 'top_level', combinatorial function of 'bist_end' drives 'pass_nfail'.
        *E,CBPAHI (./sources/top_level.v,17):: in instance 'top_level', output 'bist_end' of instance 'controller' drives 'bist_end'.
        *E,CBPAHI (./sources/controller.v,75):: in instance 'top_level.controller', combinatorial function drives 'bist_end'.
      *E,CBPAHI (./sources/stateLFSR.v,20|0): Combinatorial path crossing multiple units drives 'top_level.stateLFSR.y[24:0]'.
        *E,CBPAHI (./sources/stateLFSR.v,20):: in instance 'top_level.stateLFSR', combinatorial function of input 'control_state' drives 'y[24:0]'.
        *E,CBPAHI (./sources/top_level.v,19):: in instance 'top_level', 'bist_running' drives input 'control_state' of instance 'stateLFSR'.
        *E,CBPAHI (./sources/top_level.v,17):: in instance 'top_level', output 'bist_running' of instance 'controller' drives 'bist_running'.
        *E,CBPAHI (./sources/controller.v,112):: in instance 'top_level.controller', 'bist_running_reg' drives 'bist_running'.
        *E,CBPAHI (./sources/controller.v,76):: in instance 'top_level.controller', combinatorial function drives 'bist_running_reg'.
      *E,CBPAHI (./sources/stateLFSR.v,20|0): Combinatorial path crossing multiple units drives 'top_level.stateLFSR.y[25]'.
        *E,CBPAHI (./sources/stateLFSR.v,20):: in instance 'top_level.stateLFSR', combinatorial function of input 'control_state' drives 'y[25]'.
        *E,CBPAHI (./sources/top_level.v,19):: in instance 'top_level', 'bist_running' drives input 'control_state' of instance 'stateLFSR'.
        *E,CBPAHI (./sources/top_level.v,17):: in instance 'top_level', output 'bist_running' of instance 'controller' drives 'bist_running'.
        *E,CBPAHI (./sources/controller.v,112):: in instance 'top_level.controller', 'bist_running_reg' drives 'bist_running'.
        *E,CBPAHI (./sources/controller.v,76):: in instance 'top_level.controller', combinatorial function drives 'bist_running_reg'.
      *E,CBPAHI (./sources/inputLFSR.v,20|0): Combinatorial path crossing multiple units drives 'top_level.inputLFSR.x[3:0]'.
        *E,CBPAHI (./sources/inputLFSR.v,20):: in instance 'top_level.inputLFSR', combinatorial function of input 'control_input' drives 'x[3:0]'.
        *E,CBPAHI (./sources/top_level.v,21):: in instance 'top_level', 'bist_running' drives input 'control_input' of instance 'inputLFSR'.
        *E,CBPAHI (./sources/top_level.v,17):: in instance 'top_level', output 'bist_running' of instance 'controller' drives 'bist_running'.
        *E,CBPAHI (./sources/controller.v,112):: in instance 'top_level.controller', 'bist_running_reg' drives 'bist_running'.
        *E,CBPAHI (./sources/controller.v,76):: in instance 'top_level.controller', combinatorial function drives 'bist_running_reg'.
      *E,CBPAHI (./sources/inputLFSR.v,20|0): Combinatorial path crossing multiple units drives 'top_level.inputLFSR.x[4]'.
        *E,CBPAHI (./sources/inputLFSR.v,20):: in instance 'top_level.inputLFSR', combinatorial function of input 'control_input' drives 'x[4]'.
        *E,CBPAHI (./sources/top_level.v,21):: in instance 'top_level', 'bist_running' drives input 'control_input' of instance 'inputLFSR'.
        *E,CBPAHI (./sources/top_level.v,17):: in instance 'top_level', output 'bist_running' of instance 'controller' drives 'bist_running'.
        *E,CBPAHI (./sources/controller.v,112):: in instance 'top_level.controller', 'bist_running_reg' drives 'bist_running'.
        *E,CBPAHI (./sources/controller.v,76):: in instance 'top_level.controller', combinatorial function drives 'bist_running_reg'.
      *E,CBPAHI (./sources/misr.v,20|0): Combinatorial path crossing multiple units drives 'top_level.misr.z[4:0]'.
        *E,CBPAHI (./sources/misr.v,20):: in instance 'top_level.misr', combinatorial function of input 'control_misr' drives 'z[4:0]'.
        *E,CBPAHI (./sources/top_level.v,23):: in instance 'top_level', 'bist_running' drives input 'control_misr' of instance 'misr'.
        *E,CBPAHI (./sources/top_level.v,17):: in instance 'top_level', output 'bist_running' of instance 'controller' drives 'bist_running'.
        *E,CBPAHI (./sources/controller.v,112):: in instance 'top_level.controller', 'bist_running_reg' drives 'bist_running'.
        *E,CBPAHI (./sources/controller.v,76):: in instance 'top_level.controller', combinatorial function drives 'bist_running_reg'.
      *E,CBPAHI (./sources/misr.v,20|0): Combinatorial path crossing multiple units drives 'top_level.misr.z[5]'.
        *E,CBPAHI (./sources/misr.v,20):: in instance 'top_level.misr', combinatorial function of input 'control_misr' drives 'z[5]'.
        *E,CBPAHI (./sources/top_level.v,23):: in instance 'top_level', 'bist_running' drives input 'control_misr' of instance 'misr'.
        *E,CBPAHI (./sources/top_level.v,17):: in instance 'top_level', output 'bist_running' of instance 'controller' drives 'bist_running'.
        *E,CBPAHI (./sources/controller.v,112):: in instance 'top_level.controller', 'bist_running_reg' drives 'bist_running'.
        *E,CBPAHI (./sources/controller.v,76):: in instance 'top_level.controller', combinatorial function drives 'bist_running_reg'.
      *E,CBPAHI (./sources/misr.v,20|0): Combinatorial path crossing multiple units drives 'top_level.misr.z[6]'.
        *E,CBPAHI (./sources/misr.v,20):: in instance 'top_level.misr', combinatorial function of input 'control_misr' drives 'z[6]'.
        *E,CBPAHI (./sources/top_level.v,23):: in instance 'top_level', 'bist_running' drives input 'control_misr' of instance 'misr'.
        *E,CBPAHI (./sources/top_level.v,17):: in instance 'top_level', output 'bist_running' of instance 'controller' drives 'bist_running'.
        *E,CBPAHI (./sources/controller.v,112):: in instance 'top_level.controller', 'bist_running_reg' drives 'bist_running'.
        *E,CBPAHI (./sources/controller.v,76):: in instance 'top_level.controller', combinatorial function drives 'bist_running_reg'.
      *E,CBPAHI (./sources/misr.v,20|0): Combinatorial path crossing multiple units drives 'top_level.misr.z[7]'.
        *E,CBPAHI (./sources/misr.v,20):: in instance 'top_level.misr', combinatorial function of input 'control_misr' drives 'z[7]'.
        *E,CBPAHI (./sources/top_level.v,23):: in instance 'top_level', 'bist_running' drives input 'control_misr' of instance 'misr'.
        *E,CBPAHI (./sources/top_level.v,17):: in instance 'top_level', output 'bist_running' of instance 'controller' drives 'bist_running'.
        *E,CBPAHI (./sources/controller.v,112):: in instance 'top_level.controller', 'bist_running_reg' drives 'bist_running'.
        *E,CBPAHI (./sources/controller.v,76):: in instance 'top_level.controller', combinatorial function drives 'bist_running_reg'.
      *E,CBPAHI (./sources/misr.v,20|0): Combinatorial path crossing multiple units drives 'top_level.misr.z[8]'.
        *E,CBPAHI (./sources/misr.v,20):: in instance 'top_level.misr', combinatorial function of input 'control_misr' drives 'z[8]'.
        *E,CBPAHI (./sources/top_level.v,23):: in instance 'top_level', 'bist_running' drives input 'control_misr' of instance 'misr'.
        *E,CBPAHI (./sources/top_level.v,17):: in instance 'top_level', output 'bist_running' of instance 'controller' drives 'bist_running'.
        *E,CBPAHI (./sources/controller.v,112):: in instance 'top_level.controller', 'bist_running_reg' drives 'bist_running'.
        *E,CBPAHI (./sources/controller.v,76):: in instance 'top_level.controller', combinatorial function drives 'bist_running_reg'.
      *E,CBPAHI (./sources/misr.v,20|0): Combinatorial path crossing multiple units drives 'top_level.misr.z[9]'.
        *E,CBPAHI (./sources/misr.v,20):: in instance 'top_level.misr', combinatorial function of input 'control_misr' drives 'z[9]'.
        *E,CBPAHI (./sources/top_level.v,23):: in instance 'top_level', 'bist_running' drives input 'control_misr' of instance 'misr'.
        *E,CBPAHI (./sources/top_level.v,17):: in instance 'top_level', output 'bist_running' of instance 'controller' drives 'bist_running'.
        *E,CBPAHI (./sources/controller.v,112):: in instance 'top_level.controller', 'bist_running_reg' drives 'bist_running'.
        *E,CBPAHI (./sources/controller.v,76):: in instance 'top_level.controller', combinatorial function drives 'bist_running_reg'.
Severity: Warning (734)
  Category: ALL_TOOL (120)
    Tag: PRTSNP (1)
      *W,PRTSNP (No source,0|0): Design is partially elaborated. Connectivity information may not be complete.
    Tag: UNCINW (119)
      *W,UNCINW (./sources/circuito06_scan_syn.v,38|0): Component instance is not fully bound (coda1_reg[0]).
      *W,UNCINW (./sources/circuito06_scan_syn.v,40|0): Component instance is not fully bound (coda1_reg[1]).
      *W,UNCINW (./sources/circuito06_scan_syn.v,42|0): Component instance is not fully bound (coda2_reg[0]).
      *W,UNCINW (./sources/circuito06_scan_syn.v,44|0): Component instance is not fully bound (coda1_reg[2]).
      *W,UNCINW (./sources/circuito06_scan_syn.v,46|0): Component instance is not fully bound (coda0_reg[0]).
      *W,UNCINW (./sources/circuito06_scan_syn.v,48|0): Component instance is not fully bound (coda3_reg[1]).
      *W,UNCINW (./sources/circuito06_scan_syn.v,50|0): Component instance is not fully bound (coda3_reg[2]).
      *W,UNCINW (./sources/circuito06_scan_syn.v,52|0): Component instance is not fully bound (coda3_reg[0]).
      *W,UNCINW (./sources/circuito06_scan_syn.v,54|0): Component instance is not fully bound (coda2_reg[2]).
      *W,UNCINW (./sources/circuito06_scan_syn.v,56|0): Component instance is not fully bound (coda2_reg[1]).
      *W,UNCINW (./sources/circuito06_scan_syn.v,58|0): Component instance is not fully bound (coda0_reg[1]).
      *W,UNCINW (./sources/circuito06_scan_syn.v,60|0): Component instance is not fully bound (coda0_reg[2]).
      *W,UNCINW (./sources/circuito06_scan_syn.v,62|0): Component instance is not fully bound (g2533__2398).
      *W,UNCINW (./sources/circuito06_scan_syn.v,64|0): Component instance is not fully bound (g2542__5107).
      *W,UNCINW (./sources/circuito06_scan_syn.v,65|0): Component instance is not fully bound (g2555).
      *W,UNCINW (./sources/circuito06_scan_syn.v,66|0): Component instance is not fully bound (g2543__6260).
      *W,UNCINW (./sources/circuito06_scan_syn.v,67|0): Component instance is not fully bound (g2544__4319).
      *W,UNCINW (./sources/circuito06_scan_syn.v,68|0): Component instance is not fully bound (g2547).
      *W,UNCINW (./sources/circuito06_scan_syn.v,69|0): Component instance is not fully bound (g2546__8428).
      *W,UNCINW (./sources/circuito06_scan_syn.v,70|0): Component instance is not fully bound (g2545__5526).
      *W,UNCINW (./sources/circuito06_scan_syn.v,71|0): Component instance is not fully bound (g2548).
      *W,UNCINW (./sources/circuito06_scan_syn.v,72|0): Component instance is not fully bound (g2538__6783).
      *W,UNCINW (./sources/circuito06_scan_syn.v,73|0): Component instance is not fully bound (g2532__3680).
      *W,UNCINW (./sources/circuito06_scan_syn.v,74|0): Component instance is not fully bound (g2561__1617).
      *W,UNCINW (./sources/circuito06_scan_syn.v,76|0): Component instance is not fully bound (g2549__2802).
      *W,UNCINW (./sources/circuito06_scan_syn.v,78|0): Component instance is not fully bound (g2537__1705).
      *W,UNCINW (./sources/circuito06_scan_syn.v,79|0): Component instance is not fully bound (g2551__5122).
      *W,UNCINW (./sources/circuito06_scan_syn.v,81|0): Component instance is not fully bound (g2556__8246).
      *W,UNCINW (./sources/circuito06_scan_syn.v,83|0): Component instance is not fully bound (g2554__7098).
      *W,UNCINW (./sources/circuito06_scan_syn.v,85|0): Component instance is not fully bound (g2553__6131).
      *W,UNCINW (./sources/circuito06_scan_syn.v,87|0): Component instance is not fully bound (g2557__1881).
      *W,UNCINW (./sources/circuito06_scan_syn.v,89|0): Component instance is not fully bound (g2558__5115).
      *W,UNCINW (./sources/circuito06_scan_syn.v,91|0): Component instance is not fully bound (g2550__7482).
      *W,UNCINW (./sources/circuito06_scan_syn.v,93|0): Component instance is not fully bound (g2559__4733).
      *W,UNCINW (./sources/circuito06_scan_syn.v,95|0): Component instance is not fully bound (g2560__6161).
      *W,UNCINW (./sources/circuito06_scan_syn.v,97|0): Component instance is not fully bound (g2552__9315).
      *W,UNCINW (./sources/circuito06_scan_syn.v,99|0): Component instance is not fully bound (g2569).
      *W,UNCINW (./sources/circuito06_scan_syn.v,100|0): Component instance is not fully bound (grant_reg[2]).
      *W,UNCINW (./sources/circuito06_scan_syn.v,102|0): Component instance is not fully bound (grant_reg[3]).
      *W,UNCINW (./sources/circuito06_scan_syn.v,104|0): Component instance is not fully bound (g2572__9945).
      *W,UNCINW (./sources/circuito06_scan_syn.v,106|0): Component instance is not fully bound (grant_reg[0]).
      *W,UNCINW (./sources/circuito06_scan_syn.v,108|0): Component instance is not fully bound (grant_reg[1]).
      *W,UNCINW (./sources/circuito06_scan_syn.v,110|0): Component instance is not fully bound (g2564__2883).
      *W,UNCINW (./sources/circuito06_scan_syn.v,111|0): Component instance is not fully bound (g2575__2346).
      *W,UNCINW (./sources/circuito06_scan_syn.v,112|0): Component instance is not fully bound (fu4_reg).
      *W,UNCINW (./sources/circuito06_scan_syn.v,114|0): Component instance is not fully bound (fu1_reg).
      *W,UNCINW (./sources/circuito06_scan_syn.v,116|0): Component instance is not fully bound (fu2_reg).
      *W,UNCINW (./sources/circuito06_scan_syn.v,118|0): Component instance is not fully bound (fu3_reg).
      *W,UNCINW (./sources/circuito06_scan_syn.v,120|0): Component instance is not fully bound (g2570__1666).
      *W,UNCINW (./sources/circuito06_scan_syn.v,122|0): Component instance is not fully bound (g2566__7410).
      *W,UNCINW (./sources/circuito06_scan_syn.v,123|0): Component instance is not fully bound (g2565__6417).
      *W,UNCINW (./sources/circuito06_scan_syn.v,124|0): Component instance is not fully bound (g2579).
      *W,UNCINW (./sources/circuito06_scan_syn.v,125|0): Component instance is not fully bound (g2577__5477).
      *W,UNCINW (./sources/circuito06_scan_syn.v,127|0): Component instance is not fully bound (g2580__2398).
      *W,UNCINW (./sources/circuito06_scan_syn.v,128|0): Component instance is not fully bound (g2571__5107).
      *W,UNCINW (./sources/circuito06_scan_syn.v,130|0): Component instance is not fully bound (g2573__6260).
      *W,UNCINW (./sources/circuito06_scan_syn.v,131|0): Component instance is not fully bound (g2574__4319).
      *W,UNCINW (./sources/circuito06_scan_syn.v,132|0): Component instance is not fully bound (g2578__8428).
      *W,UNCINW (./sources/circuito06_scan_syn.v,134|0): Component instance is not fully bound (stato_reg[1]).
      *W,UNCINW (./sources/circuito06_scan_syn.v,136|0): Component instance is not fully bound (g2589).
      *W,UNCINW (./sources/circuito06_scan_syn.v,137|0): Component instance is not fully bound (g2576__5526).
      *W,UNCINW (./sources/circuito06_scan_syn.v,138|0): Component instance is not fully bound (g2593__6783).
      *W,UNCINW (./sources/circuito06_scan_syn.v,139|0): Component instance is not fully bound (ru1_reg).
      *W,UNCINW (./sources/circuito06_scan_syn.v,141|0): Component instance is not fully bound (ru4_reg).
      *W,UNCINW (./sources/circuito06_scan_syn.v,143|0): Component instance is not fully bound (ru3_reg).
      *W,UNCINW (./sources/circuito06_scan_syn.v,145|0): Component instance is not fully bound (ru2_reg).
      *W,UNCINW (./sources/circuito06_scan_syn.v,147|0): Component instance is not fully bound (g2604__3680).
      *W,UNCINW (./sources/circuito06_scan_syn.v,148|0): Component instance is not fully bound (g2603__1617).
      *W,UNCINW (./sources/circuito06_scan_syn.v,149|0): Component instance is not fully bound (g2602__2802).
      *W,UNCINW (./sources/circuito06_scan_syn.v,150|0): Component instance is not fully bound (g2605__1705).
      *W,UNCINW (./sources/circuito06_scan_syn.v,151|0): Component instance is not fully bound (g2582__5122).
      *W,UNCINW (./sources/circuito06_scan_syn.v,152|0): Component instance is not fully bound (g2591__8246).
      *W,UNCINW (./sources/circuito06_scan_syn.v,154|0): Component instance is not fully bound (g2584__7098).
      *W,UNCINW (./sources/circuito06_scan_syn.v,155|0): Component instance is not fully bound (g2583__6131).
      *W,UNCINW (./sources/circuito06_scan_syn.v,156|0): Component instance is not fully bound (g2592__1881).
      *W,UNCINW (./sources/circuito06_scan_syn.v,157|0): Component instance is not fully bound (g2595__5115).
      *W,UNCINW (./sources/circuito06_scan_syn.v,158|0): Component instance is not fully bound (g2581__7482).
      *W,UNCINW (./sources/circuito06_scan_syn.v,159|0): Component instance is not fully bound (g2594__4733).
      *W,UNCINW (./sources/circuito06_scan_syn.v,160|0): Component instance is not fully bound (g2596__6161).
      *W,UNCINW (./sources/circuito06_scan_syn.v,161|0): Component instance is not fully bound (g2590__9315).
      *W,UNCINW (./sources/circuito06_scan_syn.v,162|0): Component instance is not fully bound (g2612).
      *W,UNCINW (./sources/circuito06_scan_syn.v,163|0): Component instance is not fully bound (g2611__9945).
      *W,UNCINW (./sources/circuito06_scan_syn.v,164|0): Component instance is not fully bound (g2614__2883).
      *W,UNCINW (./sources/circuito06_scan_syn.v,165|0): Component instance is not fully bound (g2615__2346).
      *W,UNCINW (./sources/circuito06_scan_syn.v,166|0): Component instance is not fully bound (g2616__1666).
      *W,UNCINW (./sources/circuito06_scan_syn.v,167|0): Component instance is not fully bound (stato_reg[0]).
      *W,UNCINW (./sources/circuito06_scan_syn.v,169|0): Component instance is not fully bound (g2601).
      *W,UNCINW (./sources/circuito06_scan_syn.v,170|0): Component instance is not fully bound (g2619__7410).
      *W,UNCINW (./sources/circuito06_scan_syn.v,171|0): Component instance is not fully bound (g2620__6417).
      *W,UNCINW (./sources/circuito06_scan_syn.v,172|0): Component instance is not fully bound (g2618__5477).
      *W,UNCINW (./sources/circuito06_scan_syn.v,173|0): Component instance is not fully bound (g2607__2398).
      *W,UNCINW (./sources/circuito06_scan_syn.v,174|0): Component instance is not fully bound (g2608__5107).
      *W,UNCINW (./sources/circuito06_scan_syn.v,175|0): Component instance is not fully bound (g2606__6260).
      *W,UNCINW (./sources/circuito06_scan_syn.v,176|0): Component instance is not fully bound (g2609__4319).
      *W,UNCINW (./sources/circuito06_scan_syn.v,177|0): Component instance is not fully bound (g2613__8428).
      *W,UNCINW (./sources/circuito06_scan_syn.v,178|0): Component instance is not fully bound (g2621__5526).
      *W,UNCINW (./sources/circuito06_scan_syn.v,179|0): Component instance is not fully bound (g2628).
      *W,UNCINW (./sources/circuito06_scan_syn.v,180|0): Component instance is not fully bound (g2624__6783).
      *W,UNCINW (./sources/circuito06_scan_syn.v,181|0): Component instance is not fully bound (g2623__3680).
      *W,UNCINW (./sources/circuito06_scan_syn.v,182|0): Component instance is not fully bound (g2625__1617).
      *W,UNCINW (./sources/circuito06_scan_syn.v,183|0): Component instance is not fully bound (g2617__2802).
      *W,UNCINW (./sources/circuito06_scan_syn.v,184|0): Component instance is not fully bound (g2627__1705).
      *W,UNCINW (./sources/circuito06_scan_syn.v,185|0): Component instance is not fully bound (g2626__5122).
      *W,UNCINW (./sources/circuito06_scan_syn.v,186|0): Component instance is not fully bound (g2629__8246).
      *W,UNCINW (./sources/circuito06_scan_syn.v,187|0): Component instance is not fully bound (g2630__7098).
      *W,UNCINW (./sources/circuito06_scan_syn.v,188|0): Component instance is not fully bound (g2632__6131).
      *W,UNCINW (./sources/circuito06_scan_syn.v,189|0): Component instance is not fully bound (g2631__1881).
      *W,UNCINW (./sources/circuito06_scan_syn.v,190|0): Component instance is not fully bound (g2639).
      *W,UNCINW (./sources/circuito06_scan_syn.v,191|0): Component instance is not fully bound (g2634).
      *W,UNCINW (./sources/circuito06_scan_syn.v,192|0): Component instance is not fully bound (g2633).
      *W,UNCINW (./sources/circuito06_scan_syn.v,193|0): Component instance is not fully bound (g2640).
      *W,UNCINW (./sources/circuito06_scan_syn.v,194|0): Component instance is not fully bound (g2638).
      *W,UNCINW (./sources/circuito06_scan_syn.v,195|0): Component instance is not fully bound (g2635).
      *W,UNCINW (./sources/circuito06_scan_syn.v,196|0): Component instance is not fully bound (g2641).
      *W,UNCINW (./sources/circuito06_scan_syn.v,197|0): Component instance is not fully bound (g2642).
      *W,UNCINW (./sources/circuito06_scan_syn.v,198|0): Component instance is not fully bound (g2636).
      *W,UNCINW (./sources/circuito06_scan_syn.v,199|0): Component instance is not fully bound (g2643).
      *W,UNCINW (./sources/circuito06_scan_syn.v,200|0): Component instance is not fully bound (g2644).
      *W,UNCINW (./sources/circuito06_scan_syn.v,201|0): Component instance is not fully bound (g2637).
  Category: DFT (17 unique/2 shared/19 total)
    Tag: FFWASR (14)
      *W,FFWASR (./sources/top_level.v,40|0): Flip-flop 'pass_nfail' does not have any asynchronous set or reset.
      *W,FFWASR (./sources/controller.v,30|0): Flip-flop 'state' does not have any asynchronous set or reset.
      *W,FFWASR (./sources/controller.v,99|0): Flip-flop 'per_count' does not have any asynchronous set or reset.
      *W,FFWASR (./sources/controller.v,107|0): Flip-flop 'seq_count' does not have any asynchronous set or reset.
      *W,FFWASR (./sources/stateLFSR.v,20|0): Flip-flop 'y[24:0]' does not have any asynchronous set or reset.
      *W,FFWASR (./sources/stateLFSR.v,20|0): Flip-flop 'y[25]' does not have any asynchronous set or reset.
      *W,FFWASR (./sources/inputLFSR.v,20|0): Flip-flop 'x[3:0]' does not have any asynchronous set or reset.
      *W,FFWASR (./sources/inputLFSR.v,20|0): Flip-flop 'x[4]' does not have any asynchronous set or reset.
      *W,FFWASR (./sources/misr.v,20|0): Flip-flop 'z[4:0]' does not have any asynchronous set or reset.
      *W,FFWASR (./sources/misr.v,20|0): Flip-flop 'z[5]' does not have any asynchronous set or reset.
      *W,FFWASR (./sources/misr.v,20|0): Flip-flop 'z[6]' does not have any asynchronous set or reset.
      *W,FFWASR (./sources/misr.v,20|0): Flip-flop 'z[7]' does not have any asynchronous set or reset.
      *W,FFWASR (./sources/misr.v,20|0): Flip-flop 'z[8]' does not have any asynchronous set or reset.
      *W,FFWASR (./sources/misr.v,20|0): Flip-flop 'z[9]' does not have any asynchronous set or reset.
    Tag: FFWNSR (3)
      *W,FFWNSR (./sources/controller.v,86|0): Flip-flop 'Q2' does not have any set or reset.
      *W,FFWNSR (./sources/controller.v,87|0): Flip-flop 'Q1' does not have any set or reset.
      *W,FFWNSR (./sources/controller.v,91|0): Flip-flop 'new_seq_reg' does not have any set or reset.
    Tag: TPOUNR (2)
      *W,TPOUNR (./sources/top_level.v,17|0): Output 'bist_end' of top-level module is not a register.
      *W,TPOUNR (./sources/top_level.v,25|0): Output 'po' of top-level module is not a register.
  Category: FSM (3)
    Tag: EXTFSM (1)
      *W,EXTFSM (./sources/controller.v,9|0): Extraneous logic present in module/design-unit 'controller' that encodes an FSM.
    Tag: TRNMBT (2)
      *W,TRNMBT (./sources/controller.v,47|0): For the specified state '1', the state value changes by more than one bits on transition to state(s): 2.
        *W,TRNMBT (./sources/controller.v,58|0):: Source HDL information for the error/warning mentioned above.
      *W,TRNMBT (./sources/controller.v,61|0): For the specified state '2', the state value changes by more than one bits on transition to state(s): 1.
        *W,TRNMBT (./sources/controller.v,68|0):: Source HDL information for the error/warning mentioned above.
  Category: RMM (0 unique/169 shared/169 total)
    Tag: ATLGLC (1)
      *W,ATLGLC (./sources/top_level.v,3|0): Glue logic inferred in top-level module/design-unit 'top_level'.
        *W,ATLGLC (./sources/top_level.v,30):: HDL-statement inferred as glue logic.
        *W,ATLGLC (./sources/top_level.v,33):: HDL-statement inferred as glue logic.
        *W,ATLGLC (./sources/top_level.v,40):: HDL-statement inferred as glue logic.
    Tag: DIFFMN (1)
      *W,DIFFMN (./sources/circuito06_scan_syn.v,7|0): Module name 'circuito06' differs from file name 'circuito06_scan_syn.v'.
    Tag: KEYWOD (3)
      *W,KEYWOD (./sources/controller.v,12|0): VHDL reserved word 'out' used as an identifier or label.
      *W,KEYWOD (./sources/controller.v,21|0): VHDL reserved word 'ON' used as an identifier or label.
      *W,KEYWOD (./sources/controller.v,21|0): VHDL reserved word 'END' used as an identifier or label.
    Tag: LCVARN (125)
      *W,LCVARN (./sources/controller.v,15|0): Register name 'Q1' uses uppercase characters.
      *W,LCVARN (./sources/controller.v,15|0): Register name 'Q2' uses uppercase characters.
      *W,LCVARN (./sources/top_level.v,19|0): Module instance name 'stateLFSR' uses uppercase characters.
      *W,LCVARN (./sources/stateLFSR.v,9|0): Module name 'stateLFSR' uses uppercase characters.
      *W,LCVARN (./sources/top_level.v,21|0): Module instance name 'inputLFSR' uses uppercase characters.
      *W,LCVARN (./sources/inputLFSR.v,9|0): Module name 'inputLFSR' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,38|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,40|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,42|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,44|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,46|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,48|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,50|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,52|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,54|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,56|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,58|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,60|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,62|0): Module name 'OAI2111' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,64|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,65|0): Module name 'CLKIN3' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,66|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,67|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,68|0): Module name 'CLKIN3' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,69|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,70|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,71|0): Module name 'CLKIN3' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,72|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,73|0): Module name 'NAND31' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,74|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,76|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,78|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,79|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,81|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,83|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,85|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,87|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,89|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,91|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,93|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,95|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,97|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,99|0): Module name 'INV3' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,100|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,102|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,104|0): Module name 'OAI2111' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,106|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,108|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,110|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,111|0): Module name 'AOI211' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,112|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,114|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,116|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,118|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,120|0): Module name 'AOI311' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,122|0): Module name 'AOI211' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,123|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,124|0): Module name 'INV2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,125|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,127|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,128|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,130|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,131|0): Module name 'AOI211' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,132|0): Module name 'OAI222' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,134|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,136|0): Module name 'INV2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,137|0): Module name 'NAND31' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,138|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,139|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,141|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,143|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,145|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,147|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,148|0): Module name 'AOI211' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,149|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,150|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,151|0): Module name 'IMUX21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,152|0): Module name 'NAND41' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,154|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,155|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,156|0): Module name 'NAND31' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,157|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,158|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,159|0): Module name 'NAND31' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,160|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,161|0): Module name 'IMUX21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,162|0): Module name 'INV2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,163|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,164|0): Module name 'IMUX21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,165|0): Module name 'IMUX21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,166|0): Module name 'IMUX21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,167|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,169|0): Module name 'INV3' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,170|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,171|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,172|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,173|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,174|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,175|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,176|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,177|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,178|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,179|0): Module name 'INV3' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,180|0): Module name 'IMUX21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,181|0): Module name 'IMUX21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,182|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,183|0): Module name 'NOR40' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,184|0): Module name 'IMUX21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,185|0): Module name 'IMUX21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,186|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,187|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,188|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,189|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,190|0): Module name 'CLKIN2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,191|0): Module name 'CLKIN2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,192|0): Module name 'INV2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,193|0): Module name 'INV2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,194|0): Module name 'INV3' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,195|0): Module name 'CLKIN2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,196|0): Module name 'INV2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,197|0): Module name 'CLKIN2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,198|0): Module name 'CLKIN2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,199|0): Module name 'INV2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,200|0): Module name 'INV2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,201|0): Module name 'INV2' uses uppercase characters.
    Tag: NOBLKN (9)
      *W,NOBLKN (./sources/top_level.v,36|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./sources/controller.v,26|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./sources/controller.v,34|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./sources/controller.v,85|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./sources/controller.v,95|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./sources/controller.v,103|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./sources/stateLFSR.v,16|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./sources/inputLFSR.v,16|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./sources/misr.v,16|0): Each block should be labeled with a meaningful name.
    Tag: STYVAL (19)
      *W,STYVAL (./sources/top_level.v,5|0): Numeric value '3' used for identifier 'pi'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/top_level.v,8|0): Numeric value '3' used for identifier 'po'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/top_level.v,11|0): Numeric value '3' used for identifier 'circuito06_input'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/top_level.v,12|0): Numeric value '8' used for identifier 'output_misr'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/controller.v,18|0): Numeric value '4' used for identifier 'per_count'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/controller.v,19|0): Numeric value '8' used for identifier 'seq_count'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/stateLFSR.v,13|0): Numeric value '25' used for identifier 'y'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/inputLFSR.v,11|0): Numeric value '3' used for identifier 'vector'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/inputLFSR.v,13|0): Numeric value '4' used for identifier 'x'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/misr.v,11|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/misr.v,12|0): Numeric value '8' used for identifier 'output_misr'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/misr.v,14|0): Numeric value '9' used for identifier 'z'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/circuito06_scan_syn.v,11|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/circuito06_scan_syn.v,15|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/circuito06_scan_syn.v,17|0): Numeric value '2' used for identifier 'coda1'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/circuito06_scan_syn.v,18|0): Numeric value '2' used for identifier 'coda2'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/circuito06_scan_syn.v,19|0): Numeric value '2' used for identifier 'coda0'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/circuito06_scan_syn.v,20|0): Numeric value '2' used for identifier 'coda3'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/circuito06_scan_syn.v,21|0): Numeric value '1' used for identifier 'stato'. Use constants to avoid portability issues.
    Tag: TPOUNR (2)
      *W,TPOUNR (./sources/top_level.v,17|0): Output 'bist_end' of top-level module is not a register.
      *W,TPOUNR (./sources/top_level.v,25|0): Output 'po' of top-level module is not a register.
    Tag: UCCONN (4)
      *W,UCCONN (./sources/top_level.v,14|0): Lowercase characters used for identifier 'signature'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./sources/stateLFSR.v,12|0): Lowercase characters used for identifier 'init_val'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./sources/inputLFSR.v,12|0): Lowercase characters used for identifier 'init_val'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./sources/misr.v,13|0): Lowercase characters used for identifier 'init_val'. Use uppercase characters for names of constants and user-defined types.
    Tag: VERREP (5)
      *W,VERREP (./sources/top_level.v,23|0): Repeated usage of identifier or label name 'misr'.
        *W,VERREP (./sources/misr.v,9):: Previously declared here.
      *W,VERREP (./sources/top_level.v,21|0): Repeated usage of identifier or label name 'inputLFSR'.
        *W,VERREP (./sources/inputLFSR.v,9):: Previously declared here.
      *W,VERREP (./sources/top_level.v,19|0): Repeated usage of identifier or label name 'stateLFSR'.
        *W,VERREP (./sources/stateLFSR.v,9):: Previously declared here.
      *W,VERREP (./sources/top_level.v,25|0): Repeated usage of identifier or label name 'circuito06'.
        *W,VERREP (./sources/circuito06_scan_syn.v,7):: Previously declared here.
      *W,VERREP (./sources/top_level.v,17|0): Repeated usage of identifier or label name 'controller'.
        *W,VERREP (./sources/controller.v,9):: Previously declared here.
  Category: RTL_CODINGSTYLE_MIXED (49 unique/19 shared/68 total)
    Tag: INTTOB (12)
      *W,INTTOB (./sources/controller.v,41|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit controller.
      *W,INTTOB (./sources/controller.v,42|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit controller.
      *W,INTTOB (./sources/controller.v,43|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit controller.
      *W,INTTOB (./sources/controller.v,51|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit controller.
      *W,INTTOB (./sources/controller.v,52|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit controller.
      *W,INTTOB (./sources/controller.v,53|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit controller.
      *W,INTTOB (./sources/controller.v,65|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit controller.
      *W,INTTOB (./sources/controller.v,66|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit controller.
      *W,INTTOB (./sources/controller.v,67|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit controller.
      *W,INTTOB (./sources/controller.v,74|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit controller.
      *W,INTTOB (./sources/controller.v,75|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit controller.
      *W,INTTOB (./sources/controller.v,76|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit controller.
    Tag: NUMSUF (4)
      *W,NUMSUF (./sources/circuito06_scan_syn.v,17|0): Identifier 'coda1' has a numeric value suffix.
      *W,NUMSUF (./sources/circuito06_scan_syn.v,18|0): Identifier 'coda2' has a numeric value suffix.
      *W,NUMSUF (./sources/circuito06_scan_syn.v,19|0): Identifier 'coda0' has a numeric value suffix.
      *W,NUMSUF (./sources/circuito06_scan_syn.v,20|0): Identifier 'coda3' has a numeric value suffix.
    Tag: POIASG (2)
      *W,POIASG (./sources/controller.v,99|0): The result of addition operation may lead to a potential overflow in module/design-unit controller.
        *W,POIASG (./sources/controller.v,99):: LHS operand 'per_count' is 5 bit(s), RHS operand 'per_count + 5'b1' is 6 bit(s).
        *W,POIASG (./sources/controller.v,99):: Increase the size of LHS by 1 bit(s).
      *W,POIASG (./sources/controller.v,107|0): The result of addition operation may lead to a potential overflow in module/design-unit controller.
        *W,POIASG (./sources/controller.v,107):: LHS operand 'seq_count' is 9 bit(s), RHS operand 'seq_count + 9'b1' is 10 bit(s).
        *W,POIASG (./sources/controller.v,107):: Increase the size of LHS by 1 bit(s).
    Tag: STYVAL (19)
      *W,STYVAL (./sources/top_level.v,5|0): Numeric value '3' used for identifier 'pi'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/top_level.v,8|0): Numeric value '3' used for identifier 'po'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/top_level.v,11|0): Numeric value '3' used for identifier 'circuito06_input'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/top_level.v,12|0): Numeric value '8' used for identifier 'output_misr'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/controller.v,18|0): Numeric value '4' used for identifier 'per_count'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/controller.v,19|0): Numeric value '8' used for identifier 'seq_count'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/stateLFSR.v,13|0): Numeric value '25' used for identifier 'y'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/inputLFSR.v,11|0): Numeric value '3' used for identifier 'vector'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/inputLFSR.v,13|0): Numeric value '4' used for identifier 'x'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/misr.v,11|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/misr.v,12|0): Numeric value '8' used for identifier 'output_misr'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/misr.v,14|0): Numeric value '9' used for identifier 'z'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/circuito06_scan_syn.v,11|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/circuito06_scan_syn.v,15|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/circuito06_scan_syn.v,17|0): Numeric value '2' used for identifier 'coda1'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/circuito06_scan_syn.v,18|0): Numeric value '2' used for identifier 'coda2'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/circuito06_scan_syn.v,19|0): Numeric value '2' used for identifier 'coda0'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/circuito06_scan_syn.v,20|0): Numeric value '2' used for identifier 'coda3'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/circuito06_scan_syn.v,21|0): Numeric value '1' used for identifier 'stato'. Use constants to avoid portability issues.
    Tag: SYNPRT (3)
      *W,SYNPRT (./sources/controller.v,111|0): Output port 'out' is assigned asynchronously.
      *W,SYNPRT (./sources/controller.v,75|0): Output port 'bist_end' is assigned asynchronously.
      *W,SYNPRT (./sources/controller.v,112|0): Output port 'bist_running' is assigned asynchronously.
    Tag: TRUNCZ (19)
      *W,TRUNCZ (./sources/controller.v,28|0): Truncation in constant conversion without a loss of bits in module/design-unit controller.
      *W,TRUNCZ (./sources/controller.v,41|0): Truncation in constant conversion without a loss of bits in module/design-unit controller.
      *W,TRUNCZ (./sources/controller.v,42|0): Truncation in constant conversion without a loss of bits in module/design-unit controller.
      *W,TRUNCZ (./sources/controller.v,43|0): Truncation in constant conversion without a loss of bits in module/design-unit controller.
      *W,TRUNCZ (./sources/controller.v,45|0): Truncation in constant conversion without a loss of bits in module/design-unit controller.
      *W,TRUNCZ (./sources/controller.v,51|0): Truncation in constant conversion without a loss of bits in module/design-unit controller.
      *W,TRUNCZ (./sources/controller.v,52|0): Truncation in constant conversion without a loss of bits in module/design-unit controller.
      *W,TRUNCZ (./sources/controller.v,53|0): Truncation in constant conversion without a loss of bits in module/design-unit controller.
      *W,TRUNCZ (./sources/controller.v,56|0): Truncation in constant conversion without a loss of bits in module/design-unit controller.
      *W,TRUNCZ (./sources/controller.v,58|0): Truncation in constant conversion without a loss of bits in module/design-unit controller.
      *W,TRUNCZ (./sources/controller.v,65|0): Truncation in constant conversion without a loss of bits in module/design-unit controller.
      *W,TRUNCZ (./sources/controller.v,66|0): Truncation in constant conversion without a loss of bits in module/design-unit controller.
      *W,TRUNCZ (./sources/controller.v,67|0): Truncation in constant conversion without a loss of bits in module/design-unit controller.
      *W,TRUNCZ (./sources/controller.v,68|0): Truncation in constant conversion without a loss of bits in module/design-unit controller.
      *W,TRUNCZ (./sources/controller.v,74|0): Truncation in constant conversion without a loss of bits in module/design-unit controller.
      *W,TRUNCZ (./sources/controller.v,75|0): Truncation in constant conversion without a loss of bits in module/design-unit controller.
      *W,TRUNCZ (./sources/controller.v,76|0): Truncation in constant conversion without a loss of bits in module/design-unit controller.
      *W,TRUNCZ (./sources/controller.v,78|0): Truncation in constant conversion without a loss of bits in module/design-unit controller.
      *W,TRUNCZ (./sources/controller.v,80|0): Truncation in constant conversion without a loss of bits in module/design-unit controller.
    Tag: UELOPR (1)
      *W,UELOPR (./sources/controller.v,54|0): Unequal length operand in bit/arithmetic operator MINUS in module/design-unit controller.
        *W,UELOPR (./sources/controller.v,54):: LHS operand 'N' is 5 bits, RHS operand '1' is 32 bits.
    Tag: ULCMPE (6)
      *W,ULCMPE (./sources/controller.v,54|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit controller. LHS operand is 5 bits, RHS operand is 32 bits.
      *W,ULCMPE (./sources/controller.v,88|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit controller. LHS operand is 1 bits, RHS operand is 32 bits.
      *W,ULCMPE (./sources/controller.v,96|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit controller. LHS operand is 1 bits, RHS operand is 32 bits.
      *W,ULCMPE (./sources/controller.v,98|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit controller. LHS operand is 1 bits, RHS operand is 32 bits.
      *W,ULCMPE (./sources/controller.v,104|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit controller. LHS operand is 1 bits, RHS operand is 32 bits.
      *W,ULCMPE (./sources/controller.v,106|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit controller. LHS operand is 1 bits, RHS operand is 32 bits.
    Tag: UNDRIV (2)
      *W,UNDRIV (./sources/circuito06_scan_syn.v,15|0): Primary output/inout 'grant_o'  is not driven in the module 'circuito06'.
      *W,UNDRIV (./sources/circuito06_scan_syn.v,16|0): Primary output/inout 'scan_out'  is not driven in the module 'circuito06'.
  Category: RTL_CODINGSTYLE_VERILOG (173)
    Tag: CDEFCV (1)
      *W,CDEFCV (./sources/controller.v,36|0): The case items of the case statement in module/design-unit controller cover all the numerical values of the case expression. The default clause is not required.
    Tag: IMPDTC (12)
      *W,IMPDTC (./sources/controller.v,41|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit controller.
      *W,IMPDTC (./sources/controller.v,42|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit controller.
      *W,IMPDTC (./sources/controller.v,43|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit controller.
      *W,IMPDTC (./sources/controller.v,51|0): Expression '1' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit controller.
      *W,IMPDTC (./sources/controller.v,52|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit controller.
      *W,IMPDTC (./sources/controller.v,53|0): Expression '1' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit controller.
      *W,IMPDTC (./sources/controller.v,65|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit controller.
      *W,IMPDTC (./sources/controller.v,66|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit controller.
      *W,IMPDTC (./sources/controller.v,67|0): Expression '1' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit controller.
      *W,IMPDTC (./sources/controller.v,74|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit controller.
      *W,IMPDTC (./sources/controller.v,75|0): Expression '1' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit controller.
      *W,IMPDTC (./sources/controller.v,76|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit controller.
    Tag: LRGOPR (3)
      *W,LRGOPR (./sources/top_level.v,39|0): Arithmetic or relational operation performed on large operands in module/design-unit top_level.
      *W,LRGOPR (./sources/controller.v,55|0): Arithmetic or relational operation performed on large operands in module/design-unit controller.
      *W,LRGOPR (./sources/controller.v,107|0): Arithmetic or relational operation performed on large operands in module/design-unit controller.
    Tag: NBGEND (17)
      *W,NBGEND (./sources/top_level.v,37|0): Missing begin/end statement in the 'if' block.
      *W,NBGEND (./sources/top_level.v,39|0): Missing begin/end statement in the 'if' block.
      *W,NBGEND (./sources/controller.v,27|0): Missing begin/end statement in the 'if' block.
      *W,NBGEND (./sources/controller.v,44|0): Missing begin/end statement in the 'if' block.
      *W,NBGEND (./sources/controller.v,55|0): Missing begin/end statement in the 'if' block.
      *W,NBGEND (./sources/controller.v,77|0): Missing begin/end statement in the 'if' block.
      *W,NBGEND (./sources/controller.v,88|0): Missing begin/end statement in the 'if' block.
      *W,NBGEND (./sources/controller.v,96|0): Missing begin/end statement in the 'if' block.
      *W,NBGEND (./sources/controller.v,98|0): Missing begin/end statement in the 'if' block.
      *W,NBGEND (./sources/controller.v,104|0): Missing begin/end statement in the 'if' block.
      *W,NBGEND (./sources/controller.v,106|0): Missing begin/end statement in the 'if' block.
      *W,NBGEND (./sources/stateLFSR.v,17|0): Missing begin/end statement in the 'if' block.
      *W,NBGEND (./sources/stateLFSR.v,19|0): Missing begin/end statement in the 'if' block.
      *W,NBGEND (./sources/inputLFSR.v,17|0): Missing begin/end statement in the 'if' block.
      *W,NBGEND (./sources/inputLFSR.v,19|0): Missing begin/end statement in the 'if' block.
      *W,NBGEND (./sources/misr.v,17|0): Missing begin/end statement in the 'if' block.
      *W,NBGEND (./sources/misr.v,19|0): Missing begin/end statement in the 'if' block.
    Tag: PRMBSE (2)
      *W,PRMBSE (./sources/controller.v,22|0): Base not specified for parameter 'N'.
      *W,PRMBSE (./sources/controller.v,23|0): Base not specified for parameter 'M'.
    Tag: REVROP (7)
      *W,REVROP (./sources/controller.v,88|0): Register 'bist_running_reg' is being read/assigned outside the process in which it was assigned using a blocking assignment.
        *W,REVROP (./sources/controller.v,34):: Assigned using blocking assignment in this process.
      *W,REVROP (./sources/controller.v,96|0): Register 'per_rst' is being read/assigned outside the process in which it was assigned using a blocking assignment.
        *W,REVROP (./sources/controller.v,34):: Assigned using blocking assignment in this process.
      *W,REVROP (./sources/controller.v,98|0): Register 'bist_running_reg' is being read/assigned outside the process in which it was assigned using a blocking assignment.
        *W,REVROP (./sources/controller.v,34):: Assigned using blocking assignment in this process.
      *W,REVROP (./sources/controller.v,104|0): Register 'seq_rst' is being read/assigned outside the process in which it was assigned using a blocking assignment.
        *W,REVROP (./sources/controller.v,34):: Assigned using blocking assignment in this process.
      *W,REVROP (./sources/controller.v,106|0): Register 'seq_en' is being read/assigned outside the process in which it was assigned using a blocking assignment.
        *W,REVROP (./sources/controller.v,34):: Assigned using blocking assignment in this process.
      *W,REVROP (./sources/controller.v,111|0): Register 'out_reg' is being read/assigned outside the process in which it was assigned using a blocking assignment.
        *W,REVROP (./sources/controller.v,34):: Assigned using blocking assignment in this process.
      *W,REVROP (./sources/controller.v,112|0): Register 'bist_running_reg' is being read/assigned outside the process in which it was assigned using a blocking assignment.
        *W,REVROP (./sources/controller.v,34):: Assigned using blocking assignment in this process.
    Tag: UASWIR (131)
      *W,UASWIR (./sources/circuito06_scan_syn.v,17|0): Wire 'coda1' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,18|0): Wire 'coda2' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,19|0): Wire 'coda0' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,20|0): Wire 'coda3' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,21|0): Wire 'stato' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,22|0): Wire 'fu1' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,22|0): Wire 'fu2' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,22|0): Wire 'fu3' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,22|0): Wire 'fu4' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,22|0): Wire 'n_0' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,22|0): Wire 'n_1' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,22|0): Wire 'n_2' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,22|0): Wire 'n_3' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,23|0): Wire 'n_4' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,23|0): Wire 'n_6' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,23|0): Wire 'n_7' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,23|0): Wire 'n_8' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,23|0): Wire 'n_9' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,23|0): Wire 'n_10' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,23|0): Wire 'n_11' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,23|0): Wire 'n_12' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,24|0): Wire 'n_13' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,24|0): Wire 'n_14' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,24|0): Wire 'n_15' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,24|0): Wire 'n_16' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,24|0): Wire 'n_17' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,24|0): Wire 'n_18' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,24|0): Wire 'n_19' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,24|0): Wire 'n_20' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,25|0): Wire 'n_21' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,25|0): Wire 'n_22' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,25|0): Wire 'n_23' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,25|0): Wire 'n_24' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,25|0): Wire 'n_25' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,25|0): Wire 'n_26' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,25|0): Wire 'n_27' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,25|0): Wire 'n_28' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,26|0): Wire 'n_29' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,26|0): Wire 'n_30' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,26|0): Wire 'n_31' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,26|0): Wire 'n_32' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,26|0): Wire 'n_33' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,26|0): Wire 'n_34' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,26|0): Wire 'n_35' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,26|0): Wire 'n_36' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,27|0): Wire 'n_37' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,27|0): Wire 'n_38' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,27|0): Wire 'n_39' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,27|0): Wire 'n_40' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,27|0): Wire 'n_41' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,27|0): Wire 'n_42' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,27|0): Wire 'n_43' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,27|0): Wire 'n_44' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,28|0): Wire 'n_45' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,28|0): Wire 'n_46' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,28|0): Wire 'n_47' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,28|0): Wire 'n_48' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,28|0): Wire 'n_49' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,28|0): Wire 'n_50' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,28|0): Wire 'n_51' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,28|0): Wire 'n_52' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,29|0): Wire 'n_53' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,29|0): Wire 'n_54' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,29|0): Wire 'n_55' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,29|0): Wire 'n_56' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,29|0): Wire 'n_57' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,29|0): Wire 'n_58' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,29|0): Wire 'n_59' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,29|0): Wire 'n_60' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,30|0): Wire 'n_61' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,30|0): Wire 'n_62' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,30|0): Wire 'n_63' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,30|0): Wire 'n_64' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,30|0): Wire 'n_65' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,30|0): Wire 'n_66' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,30|0): Wire 'n_67' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,30|0): Wire 'n_68' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,31|0): Wire 'n_69' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,31|0): Wire 'n_70' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,31|0): Wire 'n_71' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,31|0): Wire 'n_72' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,31|0): Wire 'n_73' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,31|0): Wire 'n_74' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,31|0): Wire 'n_75' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,31|0): Wire 'n_76' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,32|0): Wire 'n_77' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,32|0): Wire 'n_78' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,32|0): Wire 'n_79' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,32|0): Wire 'n_80' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,32|0): Wire 'n_81' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,32|0): Wire 'n_82' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,32|0): Wire 'n_83' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,32|0): Wire 'n_84' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,33|0): Wire 'n_85' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,33|0): Wire 'n_86' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,33|0): Wire 'n_87' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,33|0): Wire 'n_88' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,33|0): Wire 'n_89' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,33|0): Wire 'n_90' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,33|0): Wire 'n_91' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,33|0): Wire 'n_92' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,34|0): Wire 'n_93' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,34|0): Wire 'n_94' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,34|0): Wire 'n_95' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,34|0): Wire 'n_96' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,34|0): Wire 'n_97' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,34|0): Wire 'n_98' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,34|0): Wire 'n_99' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,34|0): Wire 'n_100' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,35|0): Wire 'n_101' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,35|0): Wire 'n_102' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,35|0): Wire 'n_103' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,35|0): Wire 'n_104' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,35|0): Wire 'n_105' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,35|0): Wire 'n_106' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,35|0): Wire 'n_107' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,35|0): Wire 'n_108' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,36|0): Wire 'n_109' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,36|0): Wire 'n_110' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,36|0): Wire 'n_111' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,36|0): Wire 'n_112' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,36|0): Wire 'n_113' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,36|0): Wire 'n_114' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,36|0): Wire 'n_115' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,36|0): Wire 'n_116' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,37|0): Wire 'n_117' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,37|0): Wire 'n_118' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,37|0): Wire 'ru1' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,37|0): Wire 'ru2' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,37|0): Wire 'ru3' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./sources/circuito06_scan_syn.v,37|0): Wire 'ru4' defined in module 'circuito06' is unassigned, but drives at least an object.
  Category: RTL_FILEFORMAT_MIXED (14 unique/158 shared/172 total)
    Tag: CTLCHR (2)
      *W,CTLCHR (./sources/top_level.v,42|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./sources/controller.v,24|0): HDL source line contains one or more control characters.
    Tag: DIFFMN (1)
      *W,DIFFMN (./sources/circuito06_scan_syn.v,7|0): Module name 'circuito06' differs from file name 'circuito06_scan_syn.v'.
    Tag: LCVARN (125)
      *W,LCVARN (./sources/controller.v,15|0): Register name 'Q1' uses uppercase characters.
      *W,LCVARN (./sources/controller.v,15|0): Register name 'Q2' uses uppercase characters.
      *W,LCVARN (./sources/top_level.v,19|0): Module instance name 'stateLFSR' uses uppercase characters.
      *W,LCVARN (./sources/stateLFSR.v,9|0): Module name 'stateLFSR' uses uppercase characters.
      *W,LCVARN (./sources/top_level.v,21|0): Module instance name 'inputLFSR' uses uppercase characters.
      *W,LCVARN (./sources/inputLFSR.v,9|0): Module name 'inputLFSR' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,38|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,40|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,42|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,44|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,46|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,48|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,50|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,52|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,54|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,56|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,58|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,60|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,62|0): Module name 'OAI2111' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,64|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,65|0): Module name 'CLKIN3' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,66|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,67|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,68|0): Module name 'CLKIN3' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,69|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,70|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,71|0): Module name 'CLKIN3' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,72|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,73|0): Module name 'NAND31' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,74|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,76|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,78|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,79|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,81|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,83|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,85|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,87|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,89|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,91|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,93|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,95|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,97|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,99|0): Module name 'INV3' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,100|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,102|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,104|0): Module name 'OAI2111' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,106|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,108|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,110|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,111|0): Module name 'AOI211' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,112|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,114|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,116|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,118|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,120|0): Module name 'AOI311' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,122|0): Module name 'AOI211' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,123|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,124|0): Module name 'INV2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,125|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,127|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,128|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,130|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,131|0): Module name 'AOI211' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,132|0): Module name 'OAI222' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,134|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,136|0): Module name 'INV2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,137|0): Module name 'NAND31' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,138|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,139|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,141|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,143|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,145|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,147|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,148|0): Module name 'AOI211' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,149|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,150|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,151|0): Module name 'IMUX21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,152|0): Module name 'NAND41' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,154|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,155|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,156|0): Module name 'NAND31' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,157|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,158|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,159|0): Module name 'NAND31' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,160|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,161|0): Module name 'IMUX21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,162|0): Module name 'INV2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,163|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,164|0): Module name 'IMUX21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,165|0): Module name 'IMUX21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,166|0): Module name 'IMUX21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,167|0): Module name 'DFS1' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,169|0): Module name 'INV3' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,170|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,171|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,172|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,173|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,174|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,175|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,176|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,177|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,178|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,179|0): Module name 'INV3' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,180|0): Module name 'IMUX21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,181|0): Module name 'IMUX21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,182|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,183|0): Module name 'NOR40' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,184|0): Module name 'IMUX21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,185|0): Module name 'IMUX21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,186|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,187|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,188|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,189|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,190|0): Module name 'CLKIN2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,191|0): Module name 'CLKIN2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,192|0): Module name 'INV2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,193|0): Module name 'INV2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,194|0): Module name 'INV3' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,195|0): Module name 'CLKIN2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,196|0): Module name 'INV2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,197|0): Module name 'CLKIN2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,198|0): Module name 'CLKIN2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,199|0): Module name 'INV2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,200|0): Module name 'INV2' uses uppercase characters.
      *W,LCVARN (./sources/circuito06_scan_syn.v,201|0): Module name 'INV2' uses uppercase characters.
    Tag: MAXLEN (12)
      *W,MAXLEN (./sources/top_level.v,17|0): The HDL source line is 165 characters, which exceeds the recommended length of 80 characters.
      *W,MAXLEN (./sources/top_level.v,19|0): The HDL source line is 116 characters, which exceeds the recommended length of 80 characters.
      *W,MAXLEN (./sources/top_level.v,21|0): The HDL source line is 119 characters, which exceeds the recommended length of 80 characters.
      *W,MAXLEN (./sources/top_level.v,23|0): The HDL source line is 153 characters, which exceeds the recommended length of 80 characters.
      *W,MAXLEN (./sources/top_level.v,25|0): The HDL source line is 129 characters, which exceeds the recommended length of 80 characters.
      *W,MAXLEN (./sources/top_level.v,26|0): The HDL source line is 104 characters, which exceeds the recommended length of 80 characters.
      *W,MAXLEN (./sources/top_level.v,27|0): The HDL source line is 85 characters, which exceeds the recommended length of 80 characters.
      *W,MAXLEN (./sources/top_level.v,29|0): The HDL source line is 81 characters, which exceeds the recommended length of 80 characters.
      *W,MAXLEN (./sources/top_level.v,32|0): The HDL source line is 90 characters, which exceeds the recommended length of 80 characters.
      *W,MAXLEN (./sources/controller.v,9|0): The HDL source line is 82 characters, which exceeds the recommended length of 80 characters.
      *W,MAXLEN (./sources/misr.v,9|0): The HDL source line is 81 characters, which exceeds the recommended length of 80 characters.
      *W,MAXLEN (./sources/misr.v,20|0): The HDL source line is 114 characters, which exceeds the recommended length of 80 characters.
    Tag: NOBLKN (9)
      *W,NOBLKN (./sources/top_level.v,36|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./sources/controller.v,26|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./sources/controller.v,34|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./sources/controller.v,85|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./sources/controller.v,95|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./sources/controller.v,103|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./sources/stateLFSR.v,16|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./sources/inputLFSR.v,16|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./sources/misr.v,16|0): Each block should be labeled with a meaningful name.
    Tag: STYVAL (19)
      *W,STYVAL (./sources/top_level.v,5|0): Numeric value '3' used for identifier 'pi'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/top_level.v,8|0): Numeric value '3' used for identifier 'po'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/top_level.v,11|0): Numeric value '3' used for identifier 'circuito06_input'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/top_level.v,12|0): Numeric value '8' used for identifier 'output_misr'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/controller.v,18|0): Numeric value '4' used for identifier 'per_count'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/controller.v,19|0): Numeric value '8' used for identifier 'seq_count'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/stateLFSR.v,13|0): Numeric value '25' used for identifier 'y'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/inputLFSR.v,11|0): Numeric value '3' used for identifier 'vector'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/inputLFSR.v,13|0): Numeric value '4' used for identifier 'x'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/misr.v,11|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/misr.v,12|0): Numeric value '8' used for identifier 'output_misr'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/misr.v,14|0): Numeric value '9' used for identifier 'z'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/circuito06_scan_syn.v,11|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/circuito06_scan_syn.v,15|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/circuito06_scan_syn.v,17|0): Numeric value '2' used for identifier 'coda1'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/circuito06_scan_syn.v,18|0): Numeric value '2' used for identifier 'coda2'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/circuito06_scan_syn.v,19|0): Numeric value '2' used for identifier 'coda0'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/circuito06_scan_syn.v,20|0): Numeric value '2' used for identifier 'coda3'. Use constants to avoid portability issues.
      *W,STYVAL (./sources/circuito06_scan_syn.v,21|0): Numeric value '1' used for identifier 'stato'. Use constants to avoid portability issues.
    Tag: UCCONN (4)
      *W,UCCONN (./sources/top_level.v,14|0): Lowercase characters used for identifier 'signature'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./sources/stateLFSR.v,12|0): Lowercase characters used for identifier 'init_val'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./sources/inputLFSR.v,12|0): Lowercase characters used for identifier 'init_val'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./sources/misr.v,13|0): Lowercase characters used for identifier 'init_val'. Use uppercase characters for names of constants and user-defined types.
  Category: RTL_FILEFORMAT_VERILOG (0 unique/8 shared/8 total)
    Tag: KEYWOD (3)
      *W,KEYWOD (./sources/controller.v,12|0): VHDL reserved word 'out' used as an identifier or label.
      *W,KEYWOD (./sources/controller.v,21|0): VHDL reserved word 'ON' used as an identifier or label.
      *W,KEYWOD (./sources/controller.v,21|0): VHDL reserved word 'END' used as an identifier or label.
    Tag: VERREP (5)
      *W,VERREP (./sources/top_level.v,23|0): Repeated usage of identifier or label name 'misr'.
        *W,VERREP (./sources/misr.v,9):: Previously declared here.
      *W,VERREP (./sources/top_level.v,21|0): Repeated usage of identifier or label name 'inputLFSR'.
        *W,VERREP (./sources/inputLFSR.v,9):: Previously declared here.
      *W,VERREP (./sources/top_level.v,19|0): Repeated usage of identifier or label name 'stateLFSR'.
        *W,VERREP (./sources/stateLFSR.v,9):: Previously declared here.
      *W,VERREP (./sources/top_level.v,25|0): Repeated usage of identifier or label name 'circuito06'.
        *W,VERREP (./sources/circuito06_scan_syn.v,7):: Previously declared here.
      *W,VERREP (./sources/top_level.v,17|0): Repeated usage of identifier or label name 'controller'.
        *W,VERREP (./sources/controller.v,9):: Previously declared here.
  Category: STRUCTURAL (1 unique/1 shared/2 total)
    Tag: ATLGLC (1)
      *W,ATLGLC (./sources/top_level.v,3|0): Glue logic inferred in top-level module/design-unit 'top_level'.
        *W,ATLGLC (./sources/top_level.v,30):: HDL-statement inferred as glue logic.
        *W,ATLGLC (./sources/top_level.v,33):: HDL-statement inferred as glue logic.
        *W,ATLGLC (./sources/top_level.v,40):: HDL-statement inferred as glue logic.
    Tag: SYNASN (1)
      *W,SYNASN (./sources/top_level.v,3|0): The module/design-unit 'top_level' contains synchronous as well as asynchronous logic.
        *W,SYNASN (./sources/top_level.v,33):: One instance/occurence of asynchronous logic at 'top_level.reset_internal'.
        *W,SYNASN (./sources/top_level.v,40):: One instance/occurence of synchronous logic at 'top_level.pass_nfail'.
Severity: Note (27)
  Category: DFT (1)
    Tag: CLKINF (1)
      *N,CLKINF (./sources/top_level.v,4|0): Signal 'top_level.clock' was inferred as clock.
        *N,CLKINF (./sources/top_level.v,4):: Clock source is signal 'top_level.clock'.
        *N,CLKINF (./sources/top_level.v,40):: Drives the flip-flop 'top_level.pass_nfail'.
  Category: FSM (1)
    Tag: FSMIDN (1)
      *N,FSMIDN (./sources/controller.v,30|0): In module/design-unit 'controller', FSM for state register 'state' has been recognized.
  Category: RTL_CODINGSTYLE_VERILOG (6)
    Tag: CDNOTE (6)
      *N,CDNOTE (./sources/top_level.v,1|0): The compiler directive '`timescale' is used in the RTL.
      *N,CDNOTE (./sources/controller.v,1|0): The compiler directive '`timescale' is used in the RTL.
      *N,CDNOTE (./sources/stateLFSR.v,1|0): The compiler directive '`timescale' is used in the RTL.
      *N,CDNOTE (./sources/inputLFSR.v,1|0): The compiler directive '`timescale' is used in the RTL.
      *N,CDNOTE (./sources/misr.v,1|0): The compiler directive '`timescale' is used in the RTL.
      *N,CDNOTE (./sources/circuito06_scan_syn.v,1|0): The compiler directive '`timescale' is used in the RTL.
  Category: RTL_FILEFORMAT_MIXED (12)
    Tag: DECLIN (7)
      *N,DECLIN (./sources/top_level.v,4|0): Use a separate line for each HDL declaration.
      *N,DECLIN (./sources/controller.v,10|0): Use a separate line for each HDL declaration.
      *N,DECLIN (./sources/controller.v,12|0): Use a separate line for each HDL declaration.
      *N,DECLIN (./sources/stateLFSR.v,10|0): Use a separate line for each HDL declaration.
      *N,DECLIN (./sources/inputLFSR.v,10|0): Use a separate line for each HDL declaration.
      *N,DECLIN (./sources/misr.v,10|0): Use a separate line for each HDL declaration.
      *N,DECLIN (./sources/circuito06_scan_syn.v,9|0): Use a separate line for each HDL declaration.
    Tag: IDLENG (5)
      *N,IDLENG (./sources/controller.v,21|0): Identifier name 'ON' is not of appropriate length (4 to 16 characters).
      *N,IDLENG (./sources/controller.v,21|0): Identifier name 'OFF' is not of appropriate length (4 to 16 characters).
      *N,IDLENG (./sources/controller.v,21|0): Identifier name 'END' is not of appropriate length (4 to 16 characters).
      *N,IDLENG (./sources/controller.v,22|0): Identifier name 'N' is not of appropriate length (4 to 16 characters).
      *N,IDLENG (./sources/controller.v,23|0): Identifier name 'M' is not of appropriate length (4 to 16 characters).
  Category: STRUCTURAL (7)
    Tag: NUMDFF (1)
      *N,NUMDFF (./sources/top_level.v,3|0): Number of single-bit D flip-flops present in the hierarchy is 61.
    Tag: PRTCNT (6)
      *N,PRTCNT (./sources/top_level.v,3|0): Module/Entity 'top_level' contains '7' ports.
        *N,PRTCNT (./sources/top_level.v,3):: Number of Input ports: 4.
        *N,PRTCNT (./sources/top_level.v,3):: Number of Output ports: 3.
      *N,PRTCNT (./sources/controller.v,9|0): Module/Entity 'controller' contains '7' ports.
        *N,PRTCNT (./sources/controller.v,9):: Number of Input ports: 3.
        *N,PRTCNT (./sources/controller.v,9):: Number of Output ports: 4.
      *N,PRTCNT (./sources/stateLFSR.v,9|0): Module/Entity 'stateLFSR' contains '4' ports.
        *N,PRTCNT (./sources/stateLFSR.v,9):: Number of Input ports: 3.
        *N,PRTCNT (./sources/stateLFSR.v,9):: Number of Output ports: 1.
      *N,PRTCNT (./sources/inputLFSR.v,9|0): Module/Entity 'inputLFSR' contains '4' ports.
        *N,PRTCNT (./sources/inputLFSR.v,9):: Number of Input ports: 3.
        *N,PRTCNT (./sources/inputLFSR.v,9):: Number of Output ports: 1.
      *N,PRTCNT (./sources/misr.v,9|0): Module/Entity 'misr' contains '6' ports.
        *N,PRTCNT (./sources/misr.v,9):: Number of Input ports: 5.
        *N,PRTCNT (./sources/misr.v,9):: Number of Output ports: 1.
      *N,PRTCNT (./sources/circuito06_scan_syn.v,7|0): Module/Entity 'circuito06' contains '10' ports.
        *N,PRTCNT (./sources/circuito06_scan_syn.v,7):: Number of Input ports: 8.
        *N,PRTCNT (./sources/circuito06_scan_syn.v,7):: Number of Output ports: 2.
